name: Exercism Erlang Track verification

on: [push, pull_request]

jobs:
  create_otp_matrix:
    name: Generate a list of last OTP versions
    runs-on: ubuntu-latest
    outputs:
      otps: ${{ steps.versions.outputs.versions }}
    steps:
    - name: Clone the repository
      uses: actions/checkout@dcd71f646680f2efd8db4afa5ad64fdcba30e748
    - name: Get latest OTP versions
      id: versions
      env: 
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        all_versions=$(gh api graphql -f query='query { repository(owner: "erlang", name: "otp") { releases(last: 100) { nodes { tagName } } } }' --jq '.data.repository.releases.nodes[].tagName | select(. | contains("rc") | not) | .[4:8]' | sort -u -n)
        latest_versions=$(./bin/get_latest_majors_for_ci_matrix.py <<< "$all_versions" | tail -2)
        printf "::set-output name=versions::%s" "$latest_versions"

  create_exercise_matrix:
    name: Generate a list of practice exercises
    runs-on: ubuntu-latest
    outputs:
      practices: ${{ steps.exercises.outputs.exercises }}
    steps:
    - name: Clone the repository
      uses: actions/checkout@dcd71f646680f2efd8db4afa5ad64fdcba30e748
    - name: Get all practice exercises
      id: exercises
      run: |
        printf "::set-output name=exercises::%s" "$(jq --compact-output '.exercises.practice | map(.slug)' config.json)"

  test_practice:
    name: Test examples against OTP ${{ matrix.otp }}
    runs-on: ubuntu-latest
    needs: [create_otp_matrix, create_exercise_matrix]
    strategy:
      matrix:
        otp: ${{fromJson(needs.create_otp_matrix.outputs.otps)}}
        exercise: ${{fromJson(needs.create_exercise_matrix.outputs.practices)}}
    container:
      image: erlang:${{ matrix.otp }}
    steps:
    - uses: actions/checkout@dcd71f646680f2efd8db4afa5ad64fdcba30e748
    - name: Install dependencies
      run: apt update && apt install --yes jq
    - name: run tests
      run: ./bin/run_single.sh ${{ matrix.exercise }}
